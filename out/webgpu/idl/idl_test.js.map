{"version":3,"sources":["../../../src/webgpu/idl/idl_test.ts"],"names":["Fixture","assert","IDLTest","assertMembers","act","exp","expKeys","Object","keys","k","actKeys","length"],"mappings":";;GAAA,SAASA,OAAT,QAAwB,mCAAxB,CACA,SAASC,MAAT,QAAuB,qCAAvB;;;;;AAMA,OAAO,MAAMC,OAAN,SAAsBF,OAAtB,CAA8B;AACnC;;;AAGA;AACA;AACA;AACAG,EAAAA,aAAa,CAACC,GAAD,EAAqBC,GAArB,EAAyC;AACpD,UAAMC,OAAO,GAAGC,MAAM,CAACC,IAAP,CAAYH,GAAZ,CAAhB;AACA,SAAK,MAAMI,CAAX,IAAgBH,OAAhB,EAAyB;AACvBL,MAAAA,MAAM,CAACQ,CAAC,IAAIL,GAAN,EAAW,MAAO,gBAAeK,CAAE,UAAnC,CAAN;AACAR,MAAAA,MAAM,CAACG,GAAG,CAACK,CAAD,CAAH,KAAWJ,GAAG,CAACI,CAAD,CAAf,EAAoB,MAAO,aAAYA,CAAE,SAAQL,GAAG,CAACK,CAAD,CAAI,cAAaJ,GAAG,CAACI,CAAD,CAAI,EAA5E,CAAN;AACD;AACD,UAAMC,OAAO,GAAGH,MAAM,CAACC,IAAP,CAAYJ,GAAZ,CAAhB;AACAH,IAAAA,MAAM;AACJS,IAAAA,OAAO,CAACC,MAAR,KAAmBL,OAAO,CAACK,MADvB;AAEJ,UAAO,OAAMD,OAAO,CAACC,MAAO,mBAAkBL,OAAO,CAACK,MAAO,EAFzD,CAAN;;AAID,GAlBkC","sourcesContent":["import { Fixture } from '../../common/framework/fixture.js';\nimport { assert } from '../../common/framework/util/util.js';\n\ninterface UnknownObject {\n  [k: string]: unknown;\n}\n\nexport class IDLTest extends Fixture {\n  /**\n   * Asserts that an IDL interface has the expected members.\n   */\n  // TODO: exp should allow sentinel markers for unnameable values, such as methods and attributes\n  // TODO: handle extensions\n  // TODO: check prototype chains (maybe as separate method)\n  assertMembers(act: UnknownObject, exp: UnknownObject) {\n    const expKeys = Object.keys(exp);\n    for (const k of expKeys) {\n      assert(k in act, () => `Expected key ${k} missing`);\n      assert(act[k] === exp[k], () => `Value of [${k}] was ${act[k]}, expected ${exp[k]}`);\n    }\n    const actKeys = Object.keys(act);\n    assert(\n      actKeys.length === expKeys.length,\n      () => `Had ${actKeys.length} keys, expected ${expKeys.length}`\n    );\n  }\n}\n"],"file":"idl_test.js"}