{"version":3,"sources":["../../../../src/webgpu/idl/constants/flags.spec.ts"],"names":["description","makeTestGroup","IDLTest","g","test","fn","t","expected","MAP_READ","MAP_WRITE","COPY_SRC","COPY_DST","INDEX","VERTEX","UNIFORM","STORAGE","INDIRECT","assertMembers","GPUBufferUsage","SAMPLED","OUTPUT_ATTACHMENT","GPUTextureUsage","RED","GREEN","BLUE","ALPHA","ALL","GPUColorWrite","FRAGMENT","COMPUTE","GPUShaderStage"],"mappings":";;GAAA,OAAO,MAAMA,WAAW,GAAI;;CAArB,CAIP,SAASC,aAAT,QAA8B,yCAA9B;AACA,SAASC,OAAT,QAAwB,gBAAxB;;AAEA,OAAO,MAAMC,CAAC,GAAGF,aAAa,CAACC,OAAD,CAAvB;;AAEPC,CAAC,CAACC,IAAF,CAAO,aAAP,EAAsBC,EAAtB,CAAyBC,CAAC,IAAI;AAC5B,QAAMC,QAAQ,GAAG;AACfC,IAAAA,QAAQ,EAAE,MADK;AAEfC,IAAAA,SAAS,EAAE,MAFI;AAGfC,IAAAA,QAAQ,EAAE,MAHK;AAIfC,IAAAA,QAAQ,EAAE,MAJK;AAKfC,IAAAA,KAAK,EAAE,MALQ;AAMfC,IAAAA,MAAM,EAAE,MANO;AAOfC,IAAAA,OAAO,EAAE,MAPM;AAQfC,IAAAA,OAAO,EAAE,MARM;AASfC,IAAAA,QAAQ,EAAE,MATK,EAAjB;;AAWAV,EAAAA,CAAC,CAACW,aAAF,CAAgBC,cAAhB,EAAgCX,QAAhC;AACD,CAbD;;AAeAJ,CAAC,CAACC,IAAF,CAAO,cAAP,EAAuBC,EAAvB,CAA0BC,CAAC,IAAI;AAC7B,QAAMC,QAAQ,GAAG;AACfG,IAAAA,QAAQ,EAAE,IADK;AAEfC,IAAAA,QAAQ,EAAE,IAFK;AAGfQ,IAAAA,OAAO,EAAE,IAHM;AAIfJ,IAAAA,OAAO,EAAE,IAJM;AAKfK,IAAAA,iBAAiB,EAAE,IALJ,EAAjB;;AAOAd,EAAAA,CAAC,CAACW,aAAF,CAAgBI,eAAhB,EAAiCd,QAAjC;AACD,CATD;;AAWAJ,CAAC,CAACC,IAAF,CAAO,YAAP,EAAqBC,EAArB,CAAwBC,CAAC,IAAI;AAC3B,QAAMC,QAAQ,GAAG;AACfe,IAAAA,GAAG,EAAE,GADU;AAEfC,IAAAA,KAAK,EAAE,GAFQ;AAGfC,IAAAA,IAAI,EAAE,GAHS;AAIfC,IAAAA,KAAK,EAAE,GAJQ;AAKfC,IAAAA,GAAG,EAAE,GALU,EAAjB;;AAOApB,EAAAA,CAAC,CAACW,aAAF,CAAgBU,aAAhB,EAA+BpB,QAA/B;AACD,CATD;;AAWAJ,CAAC,CAACC,IAAF,CAAO,aAAP,EAAsBC,EAAtB,CAAyBC,CAAC,IAAI;AAC5B,QAAMC,QAAQ,GAAG;AACfM,IAAAA,MAAM,EAAE,GADO;AAEfe,IAAAA,QAAQ,EAAE,GAFK;AAGfC,IAAAA,OAAO,EAAE,GAHM,EAAjB;;AAKAvB,EAAAA,CAAC,CAACW,aAAF,CAAgBa,cAAhB,EAAgCvB,QAAhC;AACD,CAPD","sourcesContent":["export const description = `\nTest the values of flags interfaces (e.g. GPUTextureUsage).\n`;\n\nimport { makeTestGroup } from '../../../common/framework/test_group.js';\nimport { IDLTest } from '../idl_test.js';\n\nexport const g = makeTestGroup(IDLTest);\n\ng.test('BufferUsage').fn(t => {\n  const expected = {\n    MAP_READ: 0x0001,\n    MAP_WRITE: 0x0002,\n    COPY_SRC: 0x0004,\n    COPY_DST: 0x0008,\n    INDEX: 0x0010,\n    VERTEX: 0x0020,\n    UNIFORM: 0x0040,\n    STORAGE: 0x0080,\n    INDIRECT: 0x0100,\n  };\n  t.assertMembers(GPUBufferUsage, expected);\n});\n\ng.test('TextureUsage').fn(t => {\n  const expected = {\n    COPY_SRC: 0x01,\n    COPY_DST: 0x02,\n    SAMPLED: 0x04,\n    STORAGE: 0x08,\n    OUTPUT_ATTACHMENT: 0x10,\n  };\n  t.assertMembers(GPUTextureUsage, expected);\n});\n\ng.test('ColorWrite').fn(t => {\n  const expected = {\n    RED: 0x1,\n    GREEN: 0x2,\n    BLUE: 0x4,\n    ALPHA: 0x8,\n    ALL: 0xf,\n  };\n  t.assertMembers(GPUColorWrite, expected);\n});\n\ng.test('ShaderStage').fn(t => {\n  const expected = {\n    VERTEX: 0x1,\n    FRAGMENT: 0x2,\n    COMPUTE: 0x4,\n  };\n  t.assertMembers(GPUShaderStage, expected);\n});\n"],"file":"flags.spec.js"}